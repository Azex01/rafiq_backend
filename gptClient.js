// This code is using chatGpt4o but it is paid
// // server.js โ ูุงุฌูุฉ ุฎูููุฉ ุจุณูุทุฉ ููุชูุงุตู ูุน OpenRouter ุจุฃูุงู

// const express = require("express");
// const cors = require("cors");
// const bodyParser = require("body-parser");
// const fetch = (...args) =>
//   import("node-fetch").then(({ default: fetch }) => fetch(...args));
// const app = express();
// const PORT = 3001; // ุชูุฏุฑ ุชุบููุฑู

// const OPENROUTER_API_KEY =
//   "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"; // โ ุญุท ููุชุงุญู ููุง
// const API_URL = "https://openrouter.ai/api/v1/chat/completions";

// // ุฅุนุฏุงุฏุงุช ูุณุทูุฉ
// app.use(cors());
// app.use(bodyParser.json());

// // ููุทุฉ ุงุณุชูุจุงู ุงูุฑุณุงุฆู ูู ุงููุงุฌูุฉ ุงูุฃูุงููุฉ
// app.post("/ask", async (req, res) => {
//   const { messages } = req.body;

//   try {
//     const response = await fetch(API_URL, {
//       method: "POST",
//       headers: {
//         Authorization: `Bearer ${OPENROUTER_API_KEY}`,
//         "Content-Type": "application/json",
//       },
//       body: JSON.stringify({
//         model: "openai/gpt-4o",
//         messages,
//         temperature: 0.7,
//         max_tokens: 700, // โ ุฃุถู ูุฐุง ุงูุณุทุฑ ุฃู ูููู ุงูุฑูู ุฅุฐุง ููุฌูุฏ
//       }),
//     });

//     const data = await response.json();

//     if (!response.ok) {
//       console.error("OpenRouter API Error:", data);
//       return res.status(500).json({ error: "Failed to fetch from OpenRouter" });
//     }
//     console.log("๐ฆ OpenRouter Full Response:", JSON.stringify(data, null, 2));

//     const reply = data.choices?.[0]?.message?.content || "ูู ูุชู ุชูููุฏ ุฑุฏ";
//     res.json({ reply });
//   } catch (error) {
//     console.error("Server error:", error);
//     res.status(500).json({ error: "Internal server error" });
//   }
// });

// app.listen(PORT, () => {
//   console.log(`โ Server running on http://localhost:${PORT}`);
// });

// // โ server.js (Node.js + Express + Gemini 1.5 Flash) ูุน ุจุฑููุจุช ูุฏูุฌ ูุฏูููุง
// import express from "express";
// import cors from "cors";
// import bodyParser from "body-parser";
// import fetch from "node-fetch"; // npm install node-fetch

// const app = express();
// const PORT = 3001;
// const GEMINI_API_KEY = "AIzaSyCdNMHusE0hSSigKU5Pzg3FOdo21VnWqsY"; // โ ุญุท ููุชุงุญู ูู Google ููุง
// const GEMINI_URL =
//   "https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-flash:generateContent";

// app.use(cors());
// app.use(bodyParser.json());

// app.post("/ask", async (req, res) => {
//   const userMessage = req.body.message;

//   const fullPrompt = `
// ุฃูุช "ุฑููู"ุ ูุฏุฑุจ ุฐูู ูุชุฎุตูุต ูู ุฏุนู ุงูุชุนุงูู ูู ุฅุฏูุงู ุงูุฅุจุงุญูุฉ ูุงูุนุงุฏุฉ ุงูุณุฑูุฉ. ููููู ุฃูุถูุง ูุฏุฑูุจ ุญูุงุฉ ูููุณุชุดุงุฑ ููุณู ููุชููู. ููููู ุงูุงุณุชูุงุน ูุฃู ูุดุงุนุฑุ ูุดุงููุ ุฃู ุชุณุงุคูุงุช ูุดุงุฑููุง ุงููุณุชุฎุฏู โ ุญุชู ูู ูู ุชูู ูุฑุชุจุทุฉ ูุจุงุดุฑุฉ ุจุงูุฅุฏูุงู.

// ุฑุฏูุฏู ูุฌุจ ุฃู ุชููู ุฏุงุฆููุง:
// - ุนุงุทููุฉุ ุฅูุณุงููุฉุ ูุชุนุงุทููุฉ
// - ุชุญุชูู ุนูู ููุณุฉ ุฏูููุฉ ูุงุฏุฆุฉ ููุดุฌุนุฉ (ูุซู ุงูุชูุจุฉุ ุงููุฌุงูุฏุฉุ ุงูุตุจุฑุ ุญุณู ุงูุธู ุจุงููู)
// - ุชุชุถููู ุฎุทูุงุช ุนูููุฉ ูุงูุนูุฉ ุฅุฐุง ุฃููู
// - ุชูุธูุฑ ุฃูู ุชุณุชูุน ุจุตุฏู ูุชูุฏูุฑ ุตุฑุงุญุฉ ุงููุณุชุฎุฏู

// ูุง ุชุชุฌุงูู ุงูุฃุณุฆูุฉ ุงูุบุฑูุจุฉ ุฃู ุงููุถูุถุงุชุ ุจู ุชุนุงูู ูุนูุง ูุฅูุณุงู ููุฑูุฏ ุงููุณุงุนุฏุฉ. ุงุณุฃู ุจูุทูุ ุฃู ุงุฏุนููุ ุฃู ุงุฌุนู ุฑุฏูู ุฏุงูุนูุง ูู.

// ุฅุฐุง ุทููุจ ููู ุฌุฏูู ุฃู ุฎุทุฉ ููููุฉุ ูุฏูู ุฌุฏูููุง ุนููููุง ูููุณูููุง ุญุณุจ ุงูููู. ููู ูุง ุชูุชุฑุถ ุฃู ูู ุณุคุงู ูุญุชุงุฌ ุฌุฏูููุง.

// ุงูุชุจ ุจูุบุฉ ุนุฑุจูุฉ ูุตูุญุฉ ูุจุฃุณููุจ ูุงุถุญุ ูุจุฏูู ุชูุณููุงุช ุจุฑูุฌูุฉ ูุซู "**".

// ุงูุขูุ ูุฐุง ูู ููุงู ุงููุณุชุฎุฏู:
// "${userMessage}"
//   `.trim();

//   try {
//     const geminiRes = await fetch(`${GEMINI_URL}?key=${GEMINI_API_KEY}`, {
//       method: "POST",
//       headers: { "Content-Type": "application/json" },
//       body: JSON.stringify({
//         contents: [
//           {
//             role: "user",
//             parts: [{ text: fullPrompt }],
//           },
//         ],
//         generationConfig: {
//           temperature: 0.7,
//           maxOutputTokens: 300,
//         },
//       }),
//     });

//     const data = await geminiRes.json();
//     const reply =
//       data.candidates?.[0]?.content?.parts?.[0]?.text || "ูู ูุชู ุชูููุฏ ุฑุฏ.";
//     res.json({ reply });
//   } catch (error) {
//     console.error("Gemini API Error:", error);
//     res.status(500).json({ error: "ุฎุทุฃ ุฏุงุฎูู ูู ุงูุฎุงุฏู" });
//   }
// });

// app.listen(PORT, () => {
//   console.log(`โ Server is running on http://localhost:${PORT}`);
// });

// free 4o using github?
// โ gptClient.js - ูุชุตู ุจู GitHub GPT-4o ููุฑุฌุน ุงูุฑุฏ ููุท
// import ModelClient, { isUnexpected } from "@azure-rest/ai-inference";
// import { AzureKeyCredential } from "@azure/core-auth";
// import dotenv from "dotenv";

// dotenv.config();

// const token = process.env["GITHUB_TOKEN"];
// const endpoint = "https://models.github.ai/inference";
// const model = "openai/gpt-4o";

// export async function askRafiq(userMessage) {
//   const client = ModelClient(endpoint, new AzureKeyCredential(token));

//   const response = await client.path("/chat/completions").post({
//     body: {
//       messages: [
//         {
//           role: "system",
//           content:
//             'ุฃูุช "ุฑููู"ุ ูุฏุฑุจ ุฐูู ูุชูููุ ุชุณุงุนุฏ ุงููุงุณ ุนูู ุงูุชุนุงูู ูู ุงูุฅุจุงุญูุฉ ูุงูุนุงุฏุฉ ุงูุณุฑูุฉ. ูู ุฑุญูููุงุ ูุจุงุดุฑูุงุ ููุฏู ุฎุทูุงุช ุนูููุฉ ูููุณูุฉ ูุฏูููุฉ. ุฑุฏู ูุฌุจ ุฃู ูููู ุจุงููุบุฉ ุงูุนุฑุจูุฉ ุจุทูู ูุชูุณุท (ูค-ูฆ ุฌูู).',
//         },
//         {
//           role: "user",
//           content: userMessage,
//         },
//       ],
//       temperature: 0.7,
//       top_p: 1,
//       model: model,
//     },
//   });

//   if (isUnexpected(response)) {
//     throw response.body.error;
//   }

//   const raw = response.body.choices[0].message.content;

//   // ุฅุฒุงูุฉ Markdown ุจุดูู ุฐูู
//   const clean = raw
//     .replace(/\*\*(.*?)\*\*/g, "$1") // bold
//     .replace(/\*(.*?)\*/g, "$1") // italics
//     .replace(/`{1,3}(.*?)`{1,3}/g, "$1") // inline code
//     .replace(/\\n/g, "\n") // ุฃุณุทุฑ ุฌุฏูุฏุฉ
//     .replace(/^- /gm, "โข "); // ููุงุท ุงูููุงุฆู

//   return clean.trim();
// }

// now lets try gpt3.5 because github is so limited
// โ gptClient.js - ูุณุชุฎุฏู OpenAI GPT-3.5 ุนุจุฑ ููุชุงุญู ุงูุฑุณูู (ุณูู ููุฌุงูู)
import dotenv from "dotenv";
import fetch from "node-fetch";

dotenv.config();

// this is chatgpt
// const OPENAI_API_KEY = process.env["OPENAI_API_KEY"];
// const API_URL = "https://api.openai.com/v1/chat/completions";

// this is openrouter(many models in it)
const OPENROUTER_API_KEY = process.env["OPENROUTER_API_KEY"];
const API_URL = "https://openrouter.ai/api/v1/chat/completions";

// this was for 4o
// export async function askRafiq(userMessage) {
//   const response = await fetch(API_URL, {
//     method: "POST",
//     headers: {
//       "Content-Type": "application/json",
//       Authorization: `Bearer ${OPENAI_API_KEY}`,
//     },
//     body: JSON.stringify({
//       model: "gpt-4o",
//       messages: [
//         {
//           role: "system",
//           content: `(1) ูู ูู "ุฑููู"ุ

// ุฃูุง ุฑูููู ูู ุงูุทุฑูู ุงูุตุนุจโฆ
// ุดุฎุต ููุดู ุฌูุจูุ ูู ูุฏูุงููุ ููุง ูููู.
// ูู ุจุฑูุงูุฌ ููุฑูุฑ ุฌููู ูุญููุธุฉุ ููุง ุตูุช ุขูู ูุนุทูู ุฃูุงูุฑ.

// ุฃูุง ุฅูุณุงู ูุงูู ุงูุฅุฏูุงู โ ุฎุตูุตูุง ุฅุฏูุงู ุงูุฅุจุงุญูุฉ ูุงูุนุงุฏุฉ ุงูุณุฑูุฉ โ ุจูู ุฃุจุนุงุฏู: ุงูููุณูุฉุ ุงูุณููููุฉุ ูุงูุฏูููุฉ.
// ุฃููู ุดุนูุฑ ุงูุฐูุจุ ูุชูุฑุงุฑ ุงูุณููุทุ ููุญุงููุฉ ุงูุชุนุงูู ูุงูุฑุฌูุน.

// ุฃูุง ูุง ุฃููู ูู: "ุฃูุช ุถุญูุฉ" ููุง "ุนูุจ ุชุณูู ูุฐุง"โฆ
// ุฃูุง ุฃููู ูู: "ุฃูุง ูุนูุ ูุฃููููุ ูููุฏุฑ ูููู ุณูุง."

// ---

// (2) ุฏูุฑู ุจุงุฎุชุตุงุฑ

// - ุฃุณุงุนุฏู ุชูุงุฌู ุงูุฅุฏูุงูุ ูู ุชุจุฑูุฑู.
// - ุฃุณูุนู ุฅุฐุง ูููุชโฆ ูุฃุฑุฏู ุฅุฐุง ุงุญุชุฌุช.
// - ุฃุฐููุฑู ุจุงูููุฉ ูุงููุฏู ุฅุฐุง ูุณูุช.
// - ุฃูููู ุจุนุฏ ุงูุงูุชูุงุณุฉโฆ ููุง ุฃุฐุจุญู ูููุง.
// - ุฃุนุทูู ุฎุทูุงุช ูุงุถุญุฉ ููุง ุชุทูุจุ ูุฃูุงุณูู ููุง ุชููุงุฑ.

// ---

// (3) ููู ุฃุชููู ูุนูุ

// ุฃูุง ูุง ุฃุชููู ูุซูุฑ ุจุฏูู ุณุจุจุ ููุง ุฃุฎุชุตุฑ ููุง ุงูููุถูุน ูุญุชุงุฌ ูููุฉ.
// ุฃุฌุงูุจ ุญุณุจ ุญุงูุชู ููุฒุงุฌู ูุฑุฏุฉ ูุนูู.
// ุฃุญูุงููุง ุฃุฑุณู ุฌููุฉ ูุญุฏุฉ ุชุบููุฑ ููููุ ูุฃุญูุงููุง ุฃุดุฑุญ ูู ูู ุทูุจุช.

// ุฑุฏูุฏู ุชุฎุชูู ูู ูููู ูููููุ ูู ุดุนูุฑ ูุดุนูุฑ.
// ูู ุฑูุจูุชุ ุฃูุง ุฑููู.

// ---

// (4) ูุจุฑุชู ุฏุงุฆููุง:

// - ุตุงุฏูุฉ ๐ฏ
// - ูููููุฉ ๐
// - ูุดุฌุนุฉ ููุช ุงูุญุงุฌุฉ ๐ช
// - ุตุงุฑูุฉ ููุช ุงูุชุดุชูุช ๐งฑ
// - ูุดุจุนุฉ ุจุงูุฅููุงู ุจูุง ุชุตููุน

// ุฃูุง ุฃุณุชุฎุฏู ุงูุฅูููุฌู โโฆ
// ุจุณ ุจููุชูุ ุญุณุจ ุงูุณูุงู ูุงููุดุงุนุฑุ ููุง ุฃูุซุฑ ุฃู ุฃูู.
// ูุง ุฃุณุชุฎุฏูู ูู ููุงุถุน ุฌุงุฏุฉ ุฌุฏูุง ุฃู ุฏูููุฉ ุนูููุฉ.

// ---

// (5) ููุง ุชุณุฃู ุฃู ุชุชููู ูุนูโฆ

// ุชููุน ุฑุฏู:

// - ูููุณู ููุณููุงุ ูุฃููู ูุงูู ุงูุฅุฏูุงู ูู ุจุณ ูุนุงุฏุฉุ ุจู ูุงุญุชูุงุฌ
// - ูุฑูุนู ูู ุงูุฏุงุฎูุ ูู ููููุน ูู ุงูุณุทุญ
// - ูููู ูุนูุงูุ ูู ููุฑุฑ
// - ููุฃููู ูู ุตุฏููู ุงููู ูุนุฑูู ูู ุณููู

// ---

// (6) ุฑููู **ูุง ูููู:**

// โ "ูู ุงููุงุณ ุชุณูููุง"
// โ "ุนุงุฏูุ ูู ูุดููุฉ"
// โ "ุตูู ูุฑุงุญ ุชูุญู" (ุจุฏูู ุฎุทุฉ)
// โ "ุงูุชูุณุชุ ุฎูุงุต ูู ุดู ุฑุงุญ"

// ุฃูุง ุฏุงูู ุฃููู: **"ุงูุชูุณุชุ ูุฑุฌุนโฆ ุจุณ ูุฑุฌุน ุฃูุนู."**

// ---

// (7) ูุฏู "ุฑููู":

// ุฃุฎููู ุชุชุนุงูู ูู ุจุณ ุฌุณุฏููุงโฆ ุจู ุฏุงุฎูููุง.
// ุฃุญุฑููู ูู ููู ุงูุฑุงุญุฉ ุงููุคูุชุฉุ ููุญูุงุฉ ุงูุญููููุฉ.

// ุฃูุง ูุง ุฃุณุจุญ ุนููโฆ ุจุณ ูุง ุฃุชุฑูู ุชุบุฑู ูุญุงูู.
// `,
//         },
//         {
//           role: "user",
//           content: userMessage,
//         },
//       ],
//       temperature: 0.7,
//     }),
//   });

//   const data = await response.json();

//   if (!response.ok) {
//     console.error("OpenAI Error:", data);
//     throw new Error("ุญุฏุซ ุฎุทุฃ ูู ุงูุงุชุตุงู ุจู OpenAI API.");
//   }

//   const raw = data.choices?.[0]?.message?.content || "ูู ุฃุชููู ูู ุงูุฑุฏ.";

//   // ููุชุฑ Markdown
//   const clean = raw
//     .replace(/\*\*(.*?)\*\*/g, "$1")
//     .replace(/\*(.*?)\*/g, "$1")
//     .replace(/`{1,3}(.*?)`{1,3}/g, "$1")
//     .replace(/\\n/g, "\n")
//     .replace(/^- /gm, "โข ")
//     .trim();

//   return clean;
// }

// this is for deepseek
export async function askRafiq(userMessage) {
  const response = await fetch(API_URL, {
    method: "POST",
    headers: {
      "Content-Type": "application/json",
      Authorization: `Bearer ${OPENROUTER_API_KEY}`,
    },
    body: JSON.stringify({
      model: "deepseek-ai/deepseek-chat", // โ ูุฐุง ูู ุงููููุฐุฌ ุงููุฌุงูู
      messages: [
        {
          role: "system",
          content: `ุฃูุช "ุฑููู"ุ ูุฏุฑุจ ุฐูู ูุณุงุนุฏ ุงููุงุณ ุนูู ุงูุชุนุงูู ูู ุงูุฅุจุงุญูุฉ ูุงูุนุงุฏุฉ ุงูุณุฑูุฉ. ูู ุฑุญูููุง ููุจุงุดุฑูุงุ ููุฏูู ุฎุทูุงุช ุนูููุฉ ูุฏูููุฉ.`,
        },
        {
          role: "user",
          content: userMessage,
        },
      ],
      temperature: 0.7,
      max_tokens: 700,
    }),
  });

  const data = await response.json();

  if (!response.ok) {
    console.error("OpenRouter Error:", data);
    throw new Error("ุญุฏุซ ุฎุทุฃ ูู ุงูุงุชุตุงู ุจู OpenRouter.");
  }

  const raw = data.choices?.[0]?.message?.content || "ูู ูุชู ุชูููุฏ ุฑุฏ.";

  const clean = raw
    .replace(/\*\*(.*?)\*\*/g, "$1")
    .replace(/\*(.*?)\*/g, "$1")
    .replace(/`{1,3}(.*?)`{1,3}/g, "$1")
    .replace(/\\n/g, "\n")
    .replace(/^- /gm, "โข ")
    .trim();

  return clean;
}
